# This is a basic workflow to help you get started with Actions

name: Mulesoft CI/CD Pipeline for Cloudhub2.0

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout this repo
      uses: actions/checkout@v4

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'zulu'
        

    - name: Set up environment variables
      run: |
        echo "ANYPOINT_USERNAME=${{ secrets.ANYPOINT_USERNAME }}" >> $GITHUB_ENV
        echo "ANYPOINT_PASSWORD=${{ secrets.ANYPOINT_PASSWORD }}" >> $GITHUB_ENV
        echo "ANYPOINT_ENVIRONMENT=${{ secrets.ANYPOINT_ENVIRONMENT }}" >> $GITHUB_ENV
        echo "CLIENT_ID=${{ secrets.CLIENT_ID }}" >> $GITHUB_ENV

    - name: Build with Maven
      run: mvn clean package

    - name: Deploy to CloudHub 2.0
      run: mvn mule:deploy -Danypoint.username=$ANYPOINT_USERNAME -Danypoint.password=$ANYPOINT_PASSWORD -Danypoint.environment=$ANYPOINT_ENVIRONMENT -Dclient.id=$CLIENT_ID
